{"ast":null,"code":"var _jsxFileName = \"D:\\\\Visual Studio Code\\\\Internship\\\\Slash Mark\\\\weather_forecast\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WeatherIcon({\n  description\n}) {\n  const getWeatherIcon = description => {\n    switch (description.toLowerCase()) {\n      case 'clouds':\n        return '/cloudy.png';\n      case 'partially cloudy':\n        return '/partially cloudy.png';\n      case 'rain':\n        return '/rainy.png';\n      case 'wind':\n        return '/windy.png';\n      case 'clear':\n        return '/sunny.png';\n      case 'fog':\n        return '/foggy.png';\n      case 'snow':\n        return '/snowy.png';\n      case 'storm':\n        return '/stormy.png';\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: getWeatherIcon(description),\n    alt: description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n}\n_c = WeatherIcon;\nfunction App() {\n  _s();\n  const [city, setCity] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const fetchWeather = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/weather/${city}`);\n      const data = await response.json();\n      setWeatherData(data);\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n    }\n  };\n  useEffect(() => {\n    // Fetch weather data when component mounts\n    fetchWeather();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Weather Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: city,\n      onChange: e => setCity(e.target.value),\n      placeholder: \"Enter city name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchWeather,\n      children: \"Get Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Current Weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-weather\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperature: \", weatherData.current.main.temp - 273.15, \" \\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", weatherData.current.weather[0].description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(WeatherIcon, {\n          description: weatherData.current.weather[0].main\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Forecast for the Next 5 Days\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"forecast\",\n        children: weatherData.forecast.map(entry => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Date: \", entry.date, \", Temperature: \", entry.temperature.toFixed(2), \" \\xB0C, Description: \", entry.description, /*#__PURE__*/_jsxDEV(WeatherIcon, {\n            description: entry.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, entry.date, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FEjvq1B63rrzWIzVhCR9LG+tRdk=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"WeatherIcon\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WeatherIcon","description","getWeatherIcon","toLowerCase","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","city","setCity","weatherData","setWeatherData","fetchWeather","response","fetch","data","json","error","console","className","children","type","value","onChange","e","target","placeholder","onClick","current","main","temp","weather","forecast","map","entry","date","temperature","toFixed","_c2","$RefreshReg$"],"sources":["D:/Visual Studio Code/Internship/Slash Mark/weather_forecast/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction WeatherIcon({ description }) {\n  const getWeatherIcon = (description) => {\n    switch (description.toLowerCase()) {\n      case 'clouds':\n        return '/cloudy.png';\n      case 'partially cloudy':\n        return '/partially cloudy.png';\n      case 'rain':\n        return '/rainy.png';\n      case 'wind':\n        return '/windy.png';\n      case 'clear':\n        return '/sunny.png';\n      case 'fog':\n        return '/foggy.png';\n      case 'snow':\n        return '/snowy.png';\n      case 'storm':\n        return '/stormy.png';\n      default:\n        return null;\n    }\n  };\n\n  return <img src={getWeatherIcon(description)} alt={description} />;\n}\n\nfunction App() {\n  const [city, setCity] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n\n  const fetchWeather = async () => {\n    try {\n      const response = await fetch(`http://localhost:5000/weather/${city}`);\n      const data = await response.json();\n      setWeatherData(data);\n    } catch (error) {\n      console.error('Error fetching weather data:', error);\n    }\n  };\n\n  useEffect(() => {\n    // Fetch weather data when component mounts\n    fetchWeather();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Weather Forecast</h1>\n      <input \n        type=\"text\" \n        value={city} \n        onChange={(e) => setCity(e.target.value)} \n        placeholder=\"Enter city name\" \n      />\n      <button onClick={fetchWeather}>Get Weather</button>\n      {weatherData && (\n        <div className=\"weather-box\">\n          <h2>Current Weather</h2>\n          <div className=\"current-weather\">\n            <p>Temperature: {weatherData.current.main.temp - 273.15} °C</p>\n            <p>Description: {weatherData.current.weather[0].description}</p>\n            <WeatherIcon description={weatherData.current.weather[0].main} />\n          </div>\n          <h2>Forecast for the Next 5 Days</h2>\n          <ul className=\"forecast\">\n            {weatherData.forecast.map(entry => (\n              <li key={entry.date}>\n                Date: {entry.date}, Temperature: {entry.temperature.toFixed(2)} °C, Description: {entry.description}\n                <WeatherIcon description={entry.description} />\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}